@{
    ViewBag.Title = "Lookup id value";
}

<div class="row">
    <div class="widget example col-xl-6">
        <div class="widget-header">
            <div class="fa fa-bars"></div>
            <span>Autocomplete</span>
        </div>
        <div class="widget-content">
            @Html.TextBox("AutocompleteId", null, new { @class = "form-control text-center", placeholder = "Id", @readonly = "readonly" })

            <br />

            @Html.AutoComplete("Autocomplete", new PeopleLookup())
        </div>
    </div>
    <div class="widget example col-xl-6">
        <div class="widget-header">
            <div class="fa fa-bars"></div>
            <span>Lookup</span>
        </div>
        <div class="widget-content">
            @Html.TextBox("LookupId", null, new { @class = "form-control text-center", placeholder = "Id", @readonly = "readonly" })

            <br />

            @Html.Lookup("Lookup", new PeopleLookup())
        </div>
    </div>
</div>

<div class="row">
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>View</span>
        </div>
        <div class="widget-content">
<pre>
<code>@@Html.AutoCompleteFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleLookup</span>())</code>
</pre>
        </div>
    </div>
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>View</span>
        </div>
        <div class="widget-content">
<pre>
<code>@@Html.LookupFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleLookup</span>())</code>
</pre>
        </div>
    </div>
</div>

<div class="row">
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Controller</span>
        </div>
        <div class="widget-content">
<pre>
<code><span class="kwd">public class</span> <span class="cls">HomeController</span> : <span class="cls">Controller</span>
{
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> HomeController(<span class="cls">DbContext</span> context)
    {
        Context = context;
    }

    [<span class="cls">HttpGet</span>]
    <span class="kwd">public</span> <span class="cls">ActionResult</span> Index()
    {
        <span class="kwd">return</span> View();
    }

    [<span class="cls">HttpGet</span>]
    <span class="kwd">public</span> <span class="cls">JsonResult</span> AllPeople(<span class="cls">LookupFilter</span> filter)
    {
        <span class="kwd">return</span> Json(<span class="kwd">new</span> <span class="cls">PeopleLookup</span>(Context) { Filter = filter }.GetData());
    }
}</code>
</pre>
        </div>
    </div>
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Lookup</span>
        </div>
        <div class="widget-content">
<pre>
<code><span class="kwd">public class</span> <span class="cls">PeopleLookup</span> : <span class="cls">MvcLookup</span>&lt;<span class="cls">Person</span>&gt;
{
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> PeopleLookup(<span class="cls">DbContext</span> context)
    {
        Context = context;

        <span class="com">// Defaults to property with a name "Id".</span>
        GetId = (model) => model.Id;
    }
    <span class="kwd">public</span> PeopleLookup()
    {
        Url = <span class="str">"AllPeople"</span>;
    }

    <span class="kwd">public override</span> <span class="cls">IQueryable</span>&lt;<span class="cls">Person</span>&gt; GetModels()
    {
        <span class="kwd">return</span> Context.Set&lt;<span class="cls">Person</span>&gt;();
    }
}</code>
</pre>
        </div>
    </div>
</div>

@section scripts {
    <script>
        new MvcLookup(document.getElementById('Autocomplete'), {
            events: {
                select: function (data, triggerChanges) {
                    document.getElementById('AutocompleteId').value = data.length ? data[0].Id : '';
                }
            }
        });
        new MvcLookup(document.getElementById('Lookup'), {
            events: {
                select: function (data, triggerChanges) {
                    document.getElementById('LookupId').value = data.length ? data[0].Id : '';
                }
            }
        });
    </script>
}
