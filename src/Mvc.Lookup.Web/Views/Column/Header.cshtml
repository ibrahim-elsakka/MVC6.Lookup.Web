@model PersonModel
@{
    ViewBag.Title = "Lookup column header";
}

<div class="row">
    <div class="col-md-6">
        <div class="example content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-bars"></i>
                    Autocomplete
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
                    @Html.AutoCompleteFor(model => model.Id, new PeopleAutocomplete())
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="example content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-bars"></i>
                    Autocomplete + Lookup
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
                    @Html.LookupFor(model => model.Id, new PeopleLookup())
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    View
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
@@model <span class="cls">PersonModel</span>

@@Html.AutocompleteFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleLookup</span>())
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    View
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
@@model <span class="cls">PersonModel</span>

@@Html.LookupFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleLookup</span>())
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    Controller
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
<span class="kwd">public class</span> <span class="cls">HomeController</span> : <span class="cls">Controller</span>
{
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> HomeController(<span class="cls">DbContext</span> context)
    {    
        Context = context;
    }

    [<span class="cls">HttpGet</span>]
    <span class="kwd">public</span> <span class="cls">ActionResult</span> Index()
    {
        <span class="kwd">return</span> View();
    }

    [<span class="cls">HttpGet</span>]
    <span class="kwd">public</span> <span class="cls">JsonResult</span> Default(<span class="cls">LookupFilter</span> filter)
    {
        <span class="kwd">return</span> Json(<span class="kwd">new</span> <span class="cls">PeopleLookup</span>(Context) { Filter = filter }.GetData());
    }
}
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    PeopleLookup
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
<span class="kwd">public class</span> <span class="cls">PeopleLookup</span> : <span class="cls">MvcLookup</span>&lt;<span class="cls">PersonModel</span>&gt;
{
    <span class="kwd">private</span> <span class="cls">Boolean</span> UseDisplayAttribute { <span class="kwd">get</span>; }
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> PeopleLookup(<span class="cls">DbContext</span> context)
    {
        Context = context;
    }
    <span class="kwd">public</span> PeopleLookup()
    {
        Url = <span class="str">"Default"</span>;
        UseDisplayAttribute = <span class="kwd">true</span>;
    }

    <span class="kwd">public override</span> <span class="cls">IQueryable</span>&lt;<span class="cls">PersonModel</span>&gt; GetModels()
    {
        <span class="kwd">return</span> Context.Set&lt;<span class="cls">PersonModel</span>&gt;();
    }

    <span class="kwd">public override</span> <span class="cls">String</span> GetColumnHeader(<span class="cls">PropertyInfo</span> property)
    {
        <span class="kwd">if</span> (UseDisplayAttribute)
            <span class="kwd">return base</span>.GetColumnHeader(property);

        <span class="kwd">return</span> property.Name;
    }
}

<span class="kwd">public class</span> <span class="cls">PersonModel</span>
{
    <span class="kwd">public</span> <span class="cls">Int32</span> Id { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">LookupColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Name"</span>)]
    <span class="kwd">public</span> <span class="cls">String</span> Name { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">LookupColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Surname"</span>)]
    <span class="kwd">public</span> <span class="cls">String</span> Surname { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">LookupColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Age"</span>)]
    <span class="kwd">public</span> <span class="cls">Int32</span> Age { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">LookupColumn</span>(Format = <span class="str">"{0:d}"</span>)]
    [<span class="cls">Display</span>(Name = <span class="str">"Birthday"</span>, ShortName = <span class="str">"Birth"</span>)]
    <span class="kwd">public</span> <span class="cls">DateTime</span> Birthday { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    <span class="kwd">public</span> <span class="cls">Boolean</span>? IsWorking { <span class="kwd">get</span>; <span class="kwd">set</span>; }
}
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
</div>